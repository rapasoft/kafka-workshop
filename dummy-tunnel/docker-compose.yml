version: '2'
services:
  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper
  kafka:
    hostname: kafka
    image: wurstmeister/kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 1500000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 5000
      KAFKA_LOG_ROLL_MS: 360000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 360000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  schemaregistry:
    hostname: schemaregistry
    image: confluentinc/cp-schema-registry
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry
  akhq:
    hostname: akhq
    image: tchiotludo/akhq
    ports:
      - "8123:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schemaregistry:8081"
    depends_on:
      - kafka
      - schemaregistry
  dummytunnel:
    hostname: dummytunnel
    build: .
    ports:
      - "1337:1337"
    depends_on:
      - kafka
      - schemaregistry
    restart: on-failure
    volumes:
      - ./dummytunnel.application.properties:/application.properties